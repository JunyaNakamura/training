buildscript {
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
  }
}

apply plugin: 'spring-boot'


bootRun {
  if (project.hasProperty('args')) {
    args project.args.split('\\s+')
  }
}

dependencies {
  compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
  compile("org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}")
  compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
  compile("org.springframework:spring-jms:${springVersion}")

  compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity4:2.1.2.RELEASE')
  compile('org.thymeleaf.extras:thymeleaf-extras-conditionalcomments:2.1.1.RELEASE')
  compile('net.sourceforge.nekohtml:nekohtml:1.9.15')

  compile("org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}")
  runtime('org.postgresql:postgresql:9.4-1201-jdbc41')
  compile("org.mybatis:mybatis:3.3.0")
  compile("org.mybatis:mybatis-spring:1.2.3")
  compile("org.apache.commons:commons-dbcp2:2.1.1")

  runtime("org.webjars:font-awesome:4.4.0")
  runtime("org.webjars:html5shiv:3.7.3")
  runtime("org.webjars:respond:1.4.2")
  runtime("org.webjars:jquery:1.11.1")
  runtime("org.webjars:jquery-ui:1.11.4")
  runtime("org.webjars.bower:material-design-lite:1.1.3")

  testCompile project(":test-util")
  testCompile("org.dbunit:dbunit:2.5.1")
  testCompile("cglib:cglib:2.2")
}
